name: Rust CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Check formatting
      run: cargo fmt --all -- --check
      
    - name: Clippy
      run: cargo clippy --workspace --all-targets --all-features
      
    - name: Build workspace
      run: cargo build --workspace --verbose
      
    - name: Run tests
      run: cargo test --workspace --verbose
      
    - name: Check documentation
      run: cargo doc --workspace --no-deps

  check-features:
    name: Check Feature Combinations
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Check core with no features
      run: cargo check -p ash-rpc-core --no-default-features
      
    - name: Check core with tcp feature
      run: cargo check -p ash-rpc-core --features tcp
      
    - name: Check core with tower feature
      run: cargo check -p ash-rpc-core --features tower
      
    - name: Check core with all features
      run: cargo check -p ash-rpc-core --all-features
